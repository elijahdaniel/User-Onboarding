{"ast":null,"code":"var _jsxFileName = \"/Users/elijahdaniel/User-Onboarding/src/AppForm.js\";\nimport React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\n\nconst AppForm = ({\n  errors,\n  touched,\n  values\n}) => {\n  return React.createElement(\"div\", {\n    className: \"form-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Name\",\n    autoComplete: \"new-name\",\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), touched.name && errors.name && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, errors.name), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    autoComplete: \"new-password\",\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), touched.email && errors.email && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, errors.email), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    className: \"input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), touched.password && errors.password && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, errors.password), React.createElement(\"label\", {\n    className: \"term\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"term\",\n    checked: values.term,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), \" I agree to the Terms and Conditions\"), React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nconst FormikApp = withFormik({\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    term\n  }) {\n    return {\n      name: name || '',\n      email: email || '',\n      password: password || '',\n      term: term || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(),\n    email: Yup.string().email().required(),\n    password: Yup.string().min(0).required()\n  }),\n\n  handleSubmit(values, {\n    resetForm\n  }) {\n    console.log(values);\n    resetForm();\n  }\n\n});\nconst AWF = FormikApp(AppForm);\nexport default AWF;","map":{"version":3,"sources":["/Users/elijahdaniel/User-Onboarding/src/AppForm.js"],"names":["React","Form","Field","withFormik","Yup","AppForm","errors","touched","values","name","email","password","term","FormikApp","mapPropsToValues","validationSchema","object","shape","string","required","min","handleSubmit","resetForm","console","log","AWF"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Form, Field, withFormik } from 'formik'\nimport * as Yup from 'yup'\n\nconst AppForm = ({ errors, touched, values }) => {\n  return (\n    <div className='form-container'>\n      <Form>\n        <Field\n          type='name'\n          name='name'\n          placeholder='Name'\n          autoComplete='new-name'\n          className='input'\n        />\n        {touched.name && errors.name && <p className='error'>{errors.name}</p>}\n        <Field\n          type='email'\n          name='email'\n          placeholder='Email'\n          autoComplete='new-password'\n          className='input'\n        />\n        {touched.email && errors.email && (\n          <p className='error'>{errors.email}</p>\n        )}\n        <Field\n          type='password'\n          name='password'\n          placeholder='Password'\n          className='input'\n        />\n        {touched.password && errors.password && (\n          <p className='error'>{errors.password}</p>\n        )}\n        <label className='term'>\n          <Field type='checkbox' name='term' checked={values.term} /> I agree to\n          the Terms and Conditions\n        </label>\n        <button type='submit' className='submit'>\n          Submit\n        </button>\n      </Form>\n    </div>\n  )\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues({ name, email, password, term }) {\n    return {\n      name: name || '',\n      email: email || '',\n      password: password || '',\n      term: term || false\n    }\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string().required(),\n    email: Yup.string()\n      .email()\n      .required(),\n    password: Yup.string()\n      .min(0)\n      .required()\n  }),\n  handleSubmit(values, { resetForm }) {\n    console.log(values)\n    resetForm()\n  }\n})\nconst AWF = FormikApp(AppForm)\n\nexport default AWF\n"]},"metadata":{},"sourceType":"module"}