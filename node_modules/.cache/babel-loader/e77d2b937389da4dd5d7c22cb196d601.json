{"ast":null,"code":"var _jsxFileName = \"/Users/elijahdaniel/User-Onboarding/src/AppForm.js\";\nimport React from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport Yup from 'yup';\n\nfunction AppForm({\n  values\n}) {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"name\",\n    name: \"name\",\n    placeholder: \"Name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), React.createElement(Field, {\n    type: \"password\",\n    name: \"password\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"terms\",\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), \"I agree to the Terms and Conditions\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Submit\")));\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues({\n    name,\n    email,\n    password,\n    terms\n  }) {\n    return {\n      name: name || '',\n      email: email || '',\n      password: password || '',\n      terms: terms || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    name: Yup.string().name().required(),\n    email: Yup.string().email().required(),\n    password: Yup.string().min(6).required(),\n    terms: Yup.string().terms().required()\n  }),\n\n  handleSubmit(values) {\n    console.log(values);\n  }\n\n});\nexport default FormikApp(AppForm);","map":{"version":3,"sources":["/Users/elijahdaniel/User-Onboarding/src/AppForm.js"],"names":["React","Form","Field","withFormik","Yup","AppForm","values","FormikApp","mapPropsToValues","name","email","password","terms","validationSchema","object","shape","string","required","min","handleSubmit","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,OAAT,CAAiB;AAAEC,EAAAA;AAAF,CAAjB,EAA6B;AAC3B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,IAAI,EAAC,MAAxB;AAA+B,IAAA,WAAW,EAAC,MAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAC,OAAzB;AAAiC,IAAA,WAAW,EAAC,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,UAA5B;AAAuC,IAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,IAAI,EAAC,OAA5B;AAAoC,IAAA,WAAW,EAAC,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,wCAJF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,CADF,CADF;AAcD;;AAED,MAAMC,SAAS,GAAGJ,UAAU,CAAC;AAC3BK,EAAAA,gBAAgB,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA;AAAzB,GAAD,EAAmC;AACjD,WAAO;AACLH,MAAAA,IAAI,EAAEA,IAAI,IAAI,EADT;AAELC,MAAAA,KAAK,EAAEA,KAAK,IAAI,EAFX;AAGLC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EAHjB;AAILC,MAAAA,KAAK,EAAEA,KAAK,IAAI;AAJX,KAAP;AAMD,GAR0B;;AAS3BC,EAAAA,gBAAgB,EAAET,GAAG,CAACU,MAAJ,GAAaC,KAAb,CAAmB;AACnCN,IAAAA,IAAI,EAAEL,GAAG,CAACY,MAAJ,GACHP,IADG,GAEHQ,QAFG,EAD6B;AAInCP,IAAAA,KAAK,EAAEN,GAAG,CAACY,MAAJ,GACJN,KADI,GAEJO,QAFI,EAJ4B;AAOnCN,IAAAA,QAAQ,EAAEP,GAAG,CAACY,MAAJ,GACPE,GADO,CACH,CADG,EAEPD,QAFO,EAPyB;AAUnCL,IAAAA,KAAK,EAAER,GAAG,CAACY,MAAJ,GACJJ,KADI,GAEJK,QAFI;AAV4B,GAAnB,CATS;;AAuB3BE,EAAAA,YAAY,CAACb,MAAD,EAAS;AACnBc,IAAAA,OAAO,CAACC,GAAR,CAAYf,MAAZ;AACD;;AAzB0B,CAAD,CAA5B;AA4BA,eAAeC,SAAS,CAACF,OAAD,CAAxB","sourcesContent":["import React from 'react'\nimport { Form, Field, withFormik } from 'formik'\nimport Yup from 'yup'\n\nfunction AppForm({ values }) {\n  return (\n    <div>\n      <Form>\n        <Field type='name' name='name' placeholder='Name' />\n        <Field type='email' name='email' placeholder='Email' />\n        <Field type='password' name='password' placeholder='Password' />\n        <label>\n          <Field type='checkbox' name='terms' placeholder='Password' />I agree\n          to the Terms and Conditions\n        </label>\n        <button>Submit</button>\n      </Form>\n    </div>\n  )\n}\n\nconst FormikApp = withFormik({\n  mapPropsToValues({ name, email, password, terms }) {\n    return {\n      name: name || '',\n      email: email || '',\n      password: password || '',\n      terms: terms || false\n    }\n  },\n  validationSchema: Yup.object().shape({\n    name: Yup.string()\n      .name()\n      .required(),\n    email: Yup.string()\n      .email()\n      .required(),\n    password: Yup.string()\n      .min(6)\n      .required(),\n    terms: Yup.string()\n      .terms()\n      .required()\n  }),\n  handleSubmit(values) {\n    console.log(values)\n  }\n})\n\nexport default FormikApp(AppForm)\n"]},"metadata":{},"sourceType":"module"}