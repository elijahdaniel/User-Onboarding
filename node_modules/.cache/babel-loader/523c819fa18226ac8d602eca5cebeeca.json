{"ast":null,"code":"import _slicedToArray from \"/Users/elijahdaniel/User-Onboarding/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/elijahdaniel/User-Onboarding/src/AppForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Form, Field, withFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from 'axios';\n\nconst AppForm = ({\n  errors,\n  touched,\n  values,\n  status\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        set = _useState2[1];\n\n  console.log(state);\n  useEffect(() => {\n    if (status) {\n      set([...state, status]);\n    }\n  }, [status]);\n  return React.createElement(\"div\", {\n    className: \"animal-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"text\",\n    name: \"species\",\n    placeholder: \"Species\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), touched.species && errors.species && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, errors.species), touched.size && errors.size && React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, errors.size), React.createElement(Field, {\n    type: \"text\",\n    name: \"size\",\n    placeholder: \"Size\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"checkbox-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Field, {\n    type: \"checkbox\",\n    name: \"term\",\n    checked: values.term,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }), \"I agree to the Terms and Conditions\"), React.createElement(\"button\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"Submit!\")), state.map(e => React.createElement(\"p\", {\n    key: e.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, e.species)));\n};\n\nconst formikHOC = withFormik({\n  mapPropsToValues({\n    species,\n    size,\n    term\n  }) {\n    return {\n      species: species || '',\n      size: size || '',\n      term: term || false\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    species: Yup.string().required('not a good input'),\n    size: Yup.number().required()\n  }),\n\n  handleSubmit(values, {\n    setStatus,\n    resetForm\n  }) {\n    axios.post('https://reqres.in/api/users', values).then(res => {\n      console.log('handleSubmit: then: res: ', res);\n      setStatus(res.data);\n      resetForm();\n    }).catch(err => console.error('handleSubmit: catch: err: ', err));\n  }\n\n});\nconst AppFormWithFormik = formikHOC(AppForm);\nexport default AppFormWithFormik;\n/*\nconst propsToValuesMap = {\n  mapPropsToValues()...\n};\nexport default withFormik(propsToValuesMap)(AppForm);\n*/","map":{"version":3,"sources":["/Users/elijahdaniel/User-Onboarding/src/AppForm.js"],"names":["React","useState","useEffect","Form","Field","withFormik","Yup","axios","AppForm","errors","touched","values","status","state","set","console","log","species","size","term","map","e","id","formikHOC","mapPropsToValues","validationSchema","object","shape","string","required","number","handleSubmit","setStatus","resetForm","post","then","res","data","catch","err","error","AppFormWithFormik"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Form, Field, withFormik } from 'formik'\nimport * as Yup from 'yup'\nimport axios from 'axios'\n\nconst AppForm = ({ errors, touched, values, status }) => {\n  const [state, set] = useState([])\n  console.log(state)\n\n  useEffect(() => {\n    if (status) {\n      set([...state, status])\n    }\n  }, [status])\n\n  return (\n    <div className='animal-form'>\n      <Form>\n        <Field type='text' name='species' placeholder='Species' />\n        {touched.species && errors.species && (\n          <p className='error'>{errors.species}</p>\n        )}\n        {touched.size && errors.size && <p className='error'>{errors.size}</p>}\n        <Field type='text' name='size' placeholder='Size' />\n        <label className='checkbox-container'>\n          <Field type='checkbox' name='term' checked={values.term} />I agree to\n          the Terms and Conditions\n        </label>\n        <button>Submit!</button>\n      </Form>\n      {state.map(e => (\n        <p key={e.id}>{e.species}</p>\n      ))}\n    </div>\n  )\n}\n\nconst formikHOC = withFormik({\n  mapPropsToValues({ species, size, term }) {\n    return {\n      species: species || '',\n      size: size || '',\n      term: term || false\n    }\n  },\n  validationSchema: Yup.object().shape({\n    species: Yup.string().required('not a good input'),\n    size: Yup.number().required()\n  }),\n  handleSubmit(values, { setStatus, resetForm }) {\n    axios\n      .post('https://reqres.in/api/users', values)\n      .then(res => {\n        console.log('handleSubmit: then: res: ', res)\n        setStatus(res.data)\n        resetForm()\n      })\n      .catch(err => console.error('handleSubmit: catch: err: ', err))\n  }\n})\nconst AppFormWithFormik = formikHOC(AppForm)\n\nexport default AppFormWithFormik\n\n/*\nconst propsToValuesMap = {\n  mapPropsToValues()...\n};\nexport default withFormik(propsToValuesMap)(AppForm);\n*/\n"]},"metadata":{},"sourceType":"module"}